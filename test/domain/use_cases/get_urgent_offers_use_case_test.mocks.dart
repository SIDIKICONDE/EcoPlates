// Mocks generated by Mockito 5.4.6 from annotations
// in ecoplates/test/domain/use_cases/get_urgent_offers_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:ecoplates/core/error/failures.dart' as _i5;
import 'package:ecoplates/domain/entities/food_offer.dart' as _i6;
import 'package:ecoplates/domain/repositories/food_offer_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [FoodOfferRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockFoodOfferRepository extends _i1.Mock
    implements _i3.FoodOfferRepository {
  MockFoodOfferRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.FoodOffer>>> getUrgentOffers() =>
      (super.noSuchMethod(
            Invocation.method(#getUrgentOffers, []),
            returnValue:
                _i4.Future<_i2.Either<_i5.Failure, List<_i6.FoodOffer>>>.value(
                  _FakeEither_0<_i5.Failure, List<_i6.FoodOffer>>(
                    this,
                    Invocation.method(#getUrgentOffers, []),
                  ),
                ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, List<_i6.FoodOffer>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.FoodOffer>>> getOffers({
    required int? page,
    required int? limit,
    String? categoryId,
    double? maxDistance,
    String? sortBy,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getOffers, [], {
              #page: page,
              #limit: limit,
              #categoryId: categoryId,
              #maxDistance: maxDistance,
              #sortBy: sortBy,
            }),
            returnValue:
                _i4.Future<_i2.Either<_i5.Failure, List<_i6.FoodOffer>>>.value(
                  _FakeEither_0<_i5.Failure, List<_i6.FoodOffer>>(
                    this,
                    Invocation.method(#getOffers, [], {
                      #page: page,
                      #limit: limit,
                      #categoryId: categoryId,
                      #maxDistance: maxDistance,
                      #sortBy: sortBy,
                    }),
                  ),
                ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, List<_i6.FoodOffer>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.FoodOffer>> getOfferById(
    String? offerId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getOfferById, [offerId]),
            returnValue:
                _i4.Future<_i2.Either<_i5.Failure, _i6.FoodOffer>>.value(
                  _FakeEither_0<_i5.Failure, _i6.FoodOffer>(
                    this,
                    Invocation.method(#getOfferById, [offerId]),
                  ),
                ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, _i6.FoodOffer>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.FoodOffer>>> getRecommendedOffers(
    String? userId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getRecommendedOffers, [userId]),
            returnValue:
                _i4.Future<_i2.Either<_i5.Failure, List<_i6.FoodOffer>>>.value(
                  _FakeEither_0<_i5.Failure, List<_i6.FoodOffer>>(
                    this,
                    Invocation.method(#getRecommendedOffers, [userId]),
                  ),
                ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, List<_i6.FoodOffer>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> reserveOffer({
    required String? offerId,
    required String? userId,
    required int? quantity,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#reserveOffer, [], {
              #offerId: offerId,
              #userId: userId,
              #quantity: quantity,
            }),
            returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
              _FakeEither_0<_i5.Failure, void>(
                this,
                Invocation.method(#reserveOffer, [], {
                  #offerId: offerId,
                  #userId: userId,
                  #quantity: quantity,
                }),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> cancelReservation(
    String? reservationId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#cancelReservation, [reservationId]),
            returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
              _FakeEither_0<_i5.Failure, void>(
                this,
                Invocation.method(#cancelReservation, [reservationId]),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.FoodOffer>>> searchOffers({
    required String? query,
    Map<String, dynamic>? filters,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#searchOffers, [], {
              #query: query,
              #filters: filters,
            }),
            returnValue:
                _i4.Future<_i2.Either<_i5.Failure, List<_i6.FoodOffer>>>.value(
                  _FakeEither_0<_i5.Failure, List<_i6.FoodOffer>>(
                    this,
                    Invocation.method(#searchOffers, [], {
                      #query: query,
                      #filters: filters,
                    }),
                  ),
                ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, List<_i6.FoodOffer>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> cacheOffers(
    List<_i6.FoodOffer>? offers,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#cacheOffers, [offers]),
            returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
              _FakeEither_0<_i5.Failure, void>(
                this,
                Invocation.method(#cacheOffers, [offers]),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.FoodOffer>>> getCachedOffers() =>
      (super.noSuchMethod(
            Invocation.method(#getCachedOffers, []),
            returnValue:
                _i4.Future<_i2.Either<_i5.Failure, List<_i6.FoodOffer>>>.value(
                  _FakeEither_0<_i5.Failure, List<_i6.FoodOffer>>(
                    this,
                    Invocation.method(#getCachedOffers, []),
                  ),
                ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, List<_i6.FoodOffer>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> syncOfflineData() =>
      (super.noSuchMethod(
            Invocation.method(#syncOfflineData, []),
            returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
              _FakeEither_0<_i5.Failure, void>(
                this,
                Invocation.method(#syncOfflineData, []),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, void>>);
}
