// Mocks generated by Mockito 5.4.6 from annotations
// in ecoplates/test/services/qr_security_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i10;

import 'package:dio/src/adapter.dart' as _i4;
import 'package:dio/src/cancel_token.dart' as _i12;
import 'package:dio/src/dio.dart' as _i8;
import 'package:dio/src/dio_mixin.dart' as _i6;
import 'package:dio/src/options.dart' as _i3;
import 'package:dio/src/response.dart' as _i7;
import 'package:dio/src/transformer.dart' as _i5;
import 'package:ecoplates/core/services/logger_service.dart' as _i9;
import 'package:flutter/foundation.dart' as _i11;
import 'package:flutter_secure_storage/flutter_secure_storage.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i13;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeIOSOptions_0 extends _i1.SmartFake implements _i2.IOSOptions {
  _FakeIOSOptions_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAndroidOptions_1 extends _i1.SmartFake
    implements _i2.AndroidOptions {
  _FakeAndroidOptions_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeLinuxOptions_2 extends _i1.SmartFake implements _i2.LinuxOptions {
  _FakeLinuxOptions_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeWindowsOptions_3 extends _i1.SmartFake
    implements _i2.WindowsOptions {
  _FakeWindowsOptions_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeWebOptions_4 extends _i1.SmartFake implements _i2.WebOptions {
  _FakeWebOptions_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAppleOptions_5 extends _i1.SmartFake implements _i2.AppleOptions {
  _FakeAppleOptions_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeBaseOptions_6 extends _i1.SmartFake implements _i3.BaseOptions {
  _FakeBaseOptions_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeHttpClientAdapter_7 extends _i1.SmartFake
    implements _i4.HttpClientAdapter {
  _FakeHttpClientAdapter_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTransformer_8 extends _i1.SmartFake implements _i5.Transformer {
  _FakeTransformer_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeInterceptors_9 extends _i1.SmartFake implements _i6.Interceptors {
  _FakeInterceptors_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeResponse_10<T1> extends _i1.SmartFake implements _i7.Response<T1> {
  _FakeResponse_10(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDio_11 extends _i1.SmartFake implements _i8.Dio {
  _FakeDio_11(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeLoggerService_12 extends _i1.SmartFake implements _i9.LoggerService {
  _FakeLoggerService_12(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFuture_13<T1> extends _i1.SmartFake implements _i10.Future<T1> {
  _FakeFuture_13(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [FlutterSecureStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterSecureStorage extends _i1.Mock
    implements _i2.FlutterSecureStorage {
  MockFlutterSecureStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.IOSOptions get iOptions =>
      (super.noSuchMethod(
            Invocation.getter(#iOptions),
            returnValue: _FakeIOSOptions_0(this, Invocation.getter(#iOptions)),
          )
          as _i2.IOSOptions);

  @override
  _i2.AndroidOptions get aOptions =>
      (super.noSuchMethod(
            Invocation.getter(#aOptions),
            returnValue: _FakeAndroidOptions_1(
              this,
              Invocation.getter(#aOptions),
            ),
          )
          as _i2.AndroidOptions);

  @override
  _i2.LinuxOptions get lOptions =>
      (super.noSuchMethod(
            Invocation.getter(#lOptions),
            returnValue: _FakeLinuxOptions_2(
              this,
              Invocation.getter(#lOptions),
            ),
          )
          as _i2.LinuxOptions);

  @override
  _i2.WindowsOptions get wOptions =>
      (super.noSuchMethod(
            Invocation.getter(#wOptions),
            returnValue: _FakeWindowsOptions_3(
              this,
              Invocation.getter(#wOptions),
            ),
          )
          as _i2.WindowsOptions);

  @override
  _i2.WebOptions get webOptions =>
      (super.noSuchMethod(
            Invocation.getter(#webOptions),
            returnValue: _FakeWebOptions_4(
              this,
              Invocation.getter(#webOptions),
            ),
          )
          as _i2.WebOptions);

  @override
  _i2.AppleOptions get mOptions =>
      (super.noSuchMethod(
            Invocation.getter(#mOptions),
            returnValue: _FakeAppleOptions_5(
              this,
              Invocation.getter(#mOptions),
            ),
          )
          as _i2.AppleOptions);

  @override
  void registerListener({
    required String? key,
    required _i11.ValueChanged<String?>? listener,
  }) => super.noSuchMethod(
    Invocation.method(#registerListener, [], {#key: key, #listener: listener}),
    returnValueForMissingStub: null,
  );

  @override
  void unregisterListener({
    required String? key,
    required _i11.ValueChanged<String?>? listener,
  }) => super.noSuchMethod(
    Invocation.method(#unregisterListener, [], {
      #key: key,
      #listener: listener,
    }),
    returnValueForMissingStub: null,
  );

  @override
  void unregisterAllListenersForKey({required String? key}) =>
      super.noSuchMethod(
        Invocation.method(#unregisterAllListenersForKey, [], {#key: key}),
        returnValueForMissingStub: null,
      );

  @override
  void unregisterAllListeners() => super.noSuchMethod(
    Invocation.method(#unregisterAllListeners, []),
    returnValueForMissingStub: null,
  );

  @override
  _i10.Future<void> write({
    required String? key,
    required String? value,
    _i2.AppleOptions? iOptions,
    _i2.AndroidOptions? aOptions,
    _i2.LinuxOptions? lOptions,
    _i2.WebOptions? webOptions,
    _i2.AppleOptions? mOptions,
    _i2.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#write, [], {
              #key: key,
              #value: value,
              #iOptions: iOptions,
              #aOptions: aOptions,
              #lOptions: lOptions,
              #webOptions: webOptions,
              #mOptions: mOptions,
              #wOptions: wOptions,
            }),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<String?> read({
    required String? key,
    _i2.AppleOptions? iOptions,
    _i2.AndroidOptions? aOptions,
    _i2.LinuxOptions? lOptions,
    _i2.WebOptions? webOptions,
    _i2.AppleOptions? mOptions,
    _i2.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#read, [], {
              #key: key,
              #iOptions: iOptions,
              #aOptions: aOptions,
              #lOptions: lOptions,
              #webOptions: webOptions,
              #mOptions: mOptions,
              #wOptions: wOptions,
            }),
            returnValue: _i10.Future<String?>.value(),
          )
          as _i10.Future<String?>);

  @override
  _i10.Future<bool> containsKey({
    required String? key,
    _i2.AppleOptions? iOptions,
    _i2.AndroidOptions? aOptions,
    _i2.LinuxOptions? lOptions,
    _i2.WebOptions? webOptions,
    _i2.AppleOptions? mOptions,
    _i2.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#containsKey, [], {
              #key: key,
              #iOptions: iOptions,
              #aOptions: aOptions,
              #lOptions: lOptions,
              #webOptions: webOptions,
              #mOptions: mOptions,
              #wOptions: wOptions,
            }),
            returnValue: _i10.Future<bool>.value(false),
          )
          as _i10.Future<bool>);

  @override
  _i10.Future<void> delete({
    required String? key,
    _i2.AppleOptions? iOptions,
    _i2.AndroidOptions? aOptions,
    _i2.LinuxOptions? lOptions,
    _i2.WebOptions? webOptions,
    _i2.AppleOptions? mOptions,
    _i2.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [], {
              #key: key,
              #iOptions: iOptions,
              #aOptions: aOptions,
              #lOptions: lOptions,
              #webOptions: webOptions,
              #mOptions: mOptions,
              #wOptions: wOptions,
            }),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<Map<String, String>> readAll({
    _i2.AppleOptions? iOptions,
    _i2.AndroidOptions? aOptions,
    _i2.LinuxOptions? lOptions,
    _i2.WebOptions? webOptions,
    _i2.AppleOptions? mOptions,
    _i2.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#readAll, [], {
              #iOptions: iOptions,
              #aOptions: aOptions,
              #lOptions: lOptions,
              #webOptions: webOptions,
              #mOptions: mOptions,
              #wOptions: wOptions,
            }),
            returnValue: _i10.Future<Map<String, String>>.value(
              <String, String>{},
            ),
          )
          as _i10.Future<Map<String, String>>);

  @override
  _i10.Future<void> deleteAll({
    _i2.AppleOptions? iOptions,
    _i2.AndroidOptions? aOptions,
    _i2.LinuxOptions? lOptions,
    _i2.WebOptions? webOptions,
    _i2.AppleOptions? mOptions,
    _i2.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#deleteAll, [], {
              #iOptions: iOptions,
              #aOptions: aOptions,
              #lOptions: lOptions,
              #webOptions: webOptions,
              #mOptions: mOptions,
              #wOptions: wOptions,
            }),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<bool?> isCupertinoProtectedDataAvailable() =>
      (super.noSuchMethod(
            Invocation.method(#isCupertinoProtectedDataAvailable, []),
            returnValue: _i10.Future<bool?>.value(),
          )
          as _i10.Future<bool?>);
}

/// A class which mocks [Dio].
///
/// See the documentation for Mockito's code generation for more information.
class MockDio extends _i1.Mock implements _i8.Dio {
  MockDio() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.BaseOptions get options =>
      (super.noSuchMethod(
            Invocation.getter(#options),
            returnValue: _FakeBaseOptions_6(this, Invocation.getter(#options)),
          )
          as _i3.BaseOptions);

  @override
  _i4.HttpClientAdapter get httpClientAdapter =>
      (super.noSuchMethod(
            Invocation.getter(#httpClientAdapter),
            returnValue: _FakeHttpClientAdapter_7(
              this,
              Invocation.getter(#httpClientAdapter),
            ),
          )
          as _i4.HttpClientAdapter);

  @override
  _i5.Transformer get transformer =>
      (super.noSuchMethod(
            Invocation.getter(#transformer),
            returnValue: _FakeTransformer_8(
              this,
              Invocation.getter(#transformer),
            ),
          )
          as _i5.Transformer);

  @override
  _i6.Interceptors get interceptors =>
      (super.noSuchMethod(
            Invocation.getter(#interceptors),
            returnValue: _FakeInterceptors_9(
              this,
              Invocation.getter(#interceptors),
            ),
          )
          as _i6.Interceptors);

  @override
  set options(_i3.BaseOptions? _options) => super.noSuchMethod(
    Invocation.setter(#options, _options),
    returnValueForMissingStub: null,
  );

  @override
  set httpClientAdapter(_i4.HttpClientAdapter? _httpClientAdapter) =>
      super.noSuchMethod(
        Invocation.setter(#httpClientAdapter, _httpClientAdapter),
        returnValueForMissingStub: null,
      );

  @override
  set transformer(_i5.Transformer? _transformer) => super.noSuchMethod(
    Invocation.setter(#transformer, _transformer),
    returnValueForMissingStub: null,
  );

  @override
  void close({bool? force = false}) => super.noSuchMethod(
    Invocation.method(#close, [], {#force: force}),
    returnValueForMissingStub: null,
  );

  @override
  _i10.Future<_i7.Response<T>> head<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i3.Options? options,
    _i12.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #head,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
              },
            ),
            returnValue: _i10.Future<_i7.Response<T>>.value(
              _FakeResponse_10<T>(
                this,
                Invocation.method(
                  #head,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                  },
                ),
              ),
            ),
          )
          as _i10.Future<_i7.Response<T>>);

  @override
  _i10.Future<_i7.Response<T>> headUri<T>(
    Uri? uri, {
    Object? data,
    _i3.Options? options,
    _i12.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #headUri,
              [uri],
              {#data: data, #options: options, #cancelToken: cancelToken},
            ),
            returnValue: _i10.Future<_i7.Response<T>>.value(
              _FakeResponse_10<T>(
                this,
                Invocation.method(
                  #headUri,
                  [uri],
                  {#data: data, #options: options, #cancelToken: cancelToken},
                ),
              ),
            ),
          )
          as _i10.Future<_i7.Response<T>>);

  @override
  _i10.Future<_i7.Response<T>> get<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i3.Options? options,
    _i12.CancelToken? cancelToken,
    _i3.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #get,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i10.Future<_i7.Response<T>>.value(
              _FakeResponse_10<T>(
                this,
                Invocation.method(
                  #get,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i10.Future<_i7.Response<T>>);

  @override
  _i10.Future<_i7.Response<T>> getUri<T>(
    Uri? uri, {
    Object? data,
    _i3.Options? options,
    _i12.CancelToken? cancelToken,
    _i3.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getUri,
              [uri],
              {
                #data: data,
                #options: options,
                #cancelToken: cancelToken,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i10.Future<_i7.Response<T>>.value(
              _FakeResponse_10<T>(
                this,
                Invocation.method(
                  #getUri,
                  [uri],
                  {
                    #data: data,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i10.Future<_i7.Response<T>>);

  @override
  _i10.Future<_i7.Response<T>> post<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i3.Options? options,
    _i12.CancelToken? cancelToken,
    _i3.ProgressCallback? onSendProgress,
    _i3.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #post,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i10.Future<_i7.Response<T>>.value(
              _FakeResponse_10<T>(
                this,
                Invocation.method(
                  #post,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i10.Future<_i7.Response<T>>);

  @override
  _i10.Future<_i7.Response<T>> postUri<T>(
    Uri? uri, {
    Object? data,
    _i3.Options? options,
    _i12.CancelToken? cancelToken,
    _i3.ProgressCallback? onSendProgress,
    _i3.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #postUri,
              [uri],
              {
                #data: data,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i10.Future<_i7.Response<T>>.value(
              _FakeResponse_10<T>(
                this,
                Invocation.method(
                  #postUri,
                  [uri],
                  {
                    #data: data,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i10.Future<_i7.Response<T>>);

  @override
  _i10.Future<_i7.Response<T>> put<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i3.Options? options,
    _i12.CancelToken? cancelToken,
    _i3.ProgressCallback? onSendProgress,
    _i3.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #put,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i10.Future<_i7.Response<T>>.value(
              _FakeResponse_10<T>(
                this,
                Invocation.method(
                  #put,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i10.Future<_i7.Response<T>>);

  @override
  _i10.Future<_i7.Response<T>> putUri<T>(
    Uri? uri, {
    Object? data,
    _i3.Options? options,
    _i12.CancelToken? cancelToken,
    _i3.ProgressCallback? onSendProgress,
    _i3.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #putUri,
              [uri],
              {
                #data: data,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i10.Future<_i7.Response<T>>.value(
              _FakeResponse_10<T>(
                this,
                Invocation.method(
                  #putUri,
                  [uri],
                  {
                    #data: data,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i10.Future<_i7.Response<T>>);

  @override
  _i10.Future<_i7.Response<T>> patch<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i3.Options? options,
    _i12.CancelToken? cancelToken,
    _i3.ProgressCallback? onSendProgress,
    _i3.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #patch,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i10.Future<_i7.Response<T>>.value(
              _FakeResponse_10<T>(
                this,
                Invocation.method(
                  #patch,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i10.Future<_i7.Response<T>>);

  @override
  _i10.Future<_i7.Response<T>> patchUri<T>(
    Uri? uri, {
    Object? data,
    _i3.Options? options,
    _i12.CancelToken? cancelToken,
    _i3.ProgressCallback? onSendProgress,
    _i3.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #patchUri,
              [uri],
              {
                #data: data,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i10.Future<_i7.Response<T>>.value(
              _FakeResponse_10<T>(
                this,
                Invocation.method(
                  #patchUri,
                  [uri],
                  {
                    #data: data,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i10.Future<_i7.Response<T>>);

  @override
  _i10.Future<_i7.Response<T>> delete<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i3.Options? options,
    _i12.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #delete,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
              },
            ),
            returnValue: _i10.Future<_i7.Response<T>>.value(
              _FakeResponse_10<T>(
                this,
                Invocation.method(
                  #delete,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                  },
                ),
              ),
            ),
          )
          as _i10.Future<_i7.Response<T>>);

  @override
  _i10.Future<_i7.Response<T>> deleteUri<T>(
    Uri? uri, {
    Object? data,
    _i3.Options? options,
    _i12.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #deleteUri,
              [uri],
              {#data: data, #options: options, #cancelToken: cancelToken},
            ),
            returnValue: _i10.Future<_i7.Response<T>>.value(
              _FakeResponse_10<T>(
                this,
                Invocation.method(
                  #deleteUri,
                  [uri],
                  {#data: data, #options: options, #cancelToken: cancelToken},
                ),
              ),
            ),
          )
          as _i10.Future<_i7.Response<T>>);

  @override
  _i10.Future<_i7.Response<dynamic>> download(
    String? urlPath,
    dynamic savePath, {
    _i3.ProgressCallback? onReceiveProgress,
    Map<String, dynamic>? queryParameters,
    _i12.CancelToken? cancelToken,
    bool? deleteOnError = true,
    _i3.FileAccessMode? fileAccessMode = _i3.FileAccessMode.write,
    String? lengthHeader = 'content-length',
    Object? data,
    _i3.Options? options,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #download,
              [urlPath, savePath],
              {
                #onReceiveProgress: onReceiveProgress,
                #queryParameters: queryParameters,
                #cancelToken: cancelToken,
                #deleteOnError: deleteOnError,
                #fileAccessMode: fileAccessMode,
                #lengthHeader: lengthHeader,
                #data: data,
                #options: options,
              },
            ),
            returnValue: _i10.Future<_i7.Response<dynamic>>.value(
              _FakeResponse_10<dynamic>(
                this,
                Invocation.method(
                  #download,
                  [urlPath, savePath],
                  {
                    #onReceiveProgress: onReceiveProgress,
                    #queryParameters: queryParameters,
                    #cancelToken: cancelToken,
                    #deleteOnError: deleteOnError,
                    #fileAccessMode: fileAccessMode,
                    #lengthHeader: lengthHeader,
                    #data: data,
                    #options: options,
                  },
                ),
              ),
            ),
          )
          as _i10.Future<_i7.Response<dynamic>>);

  @override
  _i10.Future<_i7.Response<dynamic>> downloadUri(
    Uri? uri,
    dynamic savePath, {
    _i3.ProgressCallback? onReceiveProgress,
    _i12.CancelToken? cancelToken,
    bool? deleteOnError = true,
    _i3.FileAccessMode? fileAccessMode = _i3.FileAccessMode.write,
    String? lengthHeader = 'content-length',
    Object? data,
    _i3.Options? options,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #downloadUri,
              [uri, savePath],
              {
                #onReceiveProgress: onReceiveProgress,
                #cancelToken: cancelToken,
                #deleteOnError: deleteOnError,
                #fileAccessMode: fileAccessMode,
                #lengthHeader: lengthHeader,
                #data: data,
                #options: options,
              },
            ),
            returnValue: _i10.Future<_i7.Response<dynamic>>.value(
              _FakeResponse_10<dynamic>(
                this,
                Invocation.method(
                  #downloadUri,
                  [uri, savePath],
                  {
                    #onReceiveProgress: onReceiveProgress,
                    #cancelToken: cancelToken,
                    #deleteOnError: deleteOnError,
                    #fileAccessMode: fileAccessMode,
                    #lengthHeader: lengthHeader,
                    #data: data,
                    #options: options,
                  },
                ),
              ),
            ),
          )
          as _i10.Future<_i7.Response<dynamic>>);

  @override
  _i10.Future<_i7.Response<T>> request<T>(
    String? url, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i12.CancelToken? cancelToken,
    _i3.Options? options,
    _i3.ProgressCallback? onSendProgress,
    _i3.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #request,
              [url],
              {
                #data: data,
                #queryParameters: queryParameters,
                #cancelToken: cancelToken,
                #options: options,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i10.Future<_i7.Response<T>>.value(
              _FakeResponse_10<T>(
                this,
                Invocation.method(
                  #request,
                  [url],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #cancelToken: cancelToken,
                    #options: options,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i10.Future<_i7.Response<T>>);

  @override
  _i10.Future<_i7.Response<T>> requestUri<T>(
    Uri? uri, {
    Object? data,
    _i12.CancelToken? cancelToken,
    _i3.Options? options,
    _i3.ProgressCallback? onSendProgress,
    _i3.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #requestUri,
              [uri],
              {
                #data: data,
                #cancelToken: cancelToken,
                #options: options,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i10.Future<_i7.Response<T>>.value(
              _FakeResponse_10<T>(
                this,
                Invocation.method(
                  #requestUri,
                  [uri],
                  {
                    #data: data,
                    #cancelToken: cancelToken,
                    #options: options,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i10.Future<_i7.Response<T>>);

  @override
  _i10.Future<_i7.Response<T>> fetch<T>(_i3.RequestOptions? requestOptions) =>
      (super.noSuchMethod(
            Invocation.method(#fetch, [requestOptions]),
            returnValue: _i10.Future<_i7.Response<T>>.value(
              _FakeResponse_10<T>(
                this,
                Invocation.method(#fetch, [requestOptions]),
              ),
            ),
          )
          as _i10.Future<_i7.Response<T>>);

  @override
  _i8.Dio clone({
    _i3.BaseOptions? options,
    _i6.Interceptors? interceptors,
    _i4.HttpClientAdapter? httpClientAdapter,
    _i5.Transformer? transformer,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#clone, [], {
              #options: options,
              #interceptors: interceptors,
              #httpClientAdapter: httpClientAdapter,
              #transformer: transformer,
            }),
            returnValue: _FakeDio_11(
              this,
              Invocation.method(#clone, [], {
                #options: options,
                #interceptors: interceptors,
                #httpClientAdapter: httpClientAdapter,
                #transformer: transformer,
              }),
            ),
          )
          as _i8.Dio);
}

/// A class which mocks [LoggerService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoggerService extends _i1.Mock implements _i9.LoggerService {
  MockLoggerService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get defaultTag =>
      (super.noSuchMethod(
            Invocation.getter(#defaultTag),
            returnValue: _i13.dummyValue<String>(
              this,
              Invocation.getter(#defaultTag),
            ),
          )
          as String);

  @override
  List<_i9.LogFunction> get outputs =>
      (super.noSuchMethod(
            Invocation.getter(#outputs),
            returnValue: <_i9.LogFunction>[],
          )
          as List<_i9.LogFunction>);

  @override
  _i9.LogLevel get minimumLevel =>
      (super.noSuchMethod(
            Invocation.getter(#minimumLevel),
            returnValue: _i9.LogLevel.debug,
          )
          as _i9.LogLevel);

  @override
  _i9.LoggerService tagged(String? tag) =>
      (super.noSuchMethod(
            Invocation.method(#tagged, [tag]),
            returnValue: _FakeLoggerService_12(
              this,
              Invocation.method(#tagged, [tag]),
            ),
          )
          as _i9.LoggerService);

  @override
  void debug(String? message, {Map<String, dynamic>? data, String? tag}) =>
      super.noSuchMethod(
        Invocation.method(#debug, [message], {#data: data, #tag: tag}),
        returnValueForMissingStub: null,
      );

  @override
  void info(String? message, {Map<String, dynamic>? data, String? tag}) =>
      super.noSuchMethod(
        Invocation.method(#info, [message], {#data: data, #tag: tag}),
        returnValueForMissingStub: null,
      );

  @override
  void warning(String? message, {Map<String, dynamic>? data, String? tag}) =>
      super.noSuchMethod(
        Invocation.method(#warning, [message], {#data: data, #tag: tag}),
        returnValueForMissingStub: null,
      );

  @override
  void error(
    String? message, {
    dynamic error,
    StackTrace? stackTrace,
    Map<String, dynamic>? data,
    String? tag,
  }) => super.noSuchMethod(
    Invocation.method(
      #error,
      [message],
      {#error: error, #stackTrace: stackTrace, #data: data, #tag: tag},
    ),
    returnValueForMissingStub: null,
  );

  @override
  void fatal(
    String? message, {
    dynamic error,
    StackTrace? stackTrace,
    Map<String, dynamic>? data,
    String? tag,
  }) => super.noSuchMethod(
    Invocation.method(
      #fatal,
      [message],
      {#error: error, #stackTrace: stackTrace, #data: data, #tag: tag},
    ),
    returnValueForMissingStub: null,
  );

  @override
  void logBusinessEvent(
    String? action, {
    Map<String, dynamic>? parameters,
    String? userId,
    String? result,
  }) => super.noSuchMethod(
    Invocation.method(
      #logBusinessEvent,
      [action],
      {#parameters: parameters, #userId: userId, #result: result},
    ),
    returnValueForMissingStub: null,
  );

  @override
  void logPerformance(
    String? operation,
    Duration? duration, {
    Map<String, dynamic>? metadata,
  }) => super.noSuchMethod(
    Invocation.method(
      #logPerformance,
      [operation, duration],
      {#metadata: metadata},
    ),
    returnValueForMissingStub: null,
  );

  @override
  _i10.Future<T> measure<T>(
    String? operation,
    _i10.Future<T> Function()? task, {
    Map<String, dynamic>? metadata,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #measure,
              [operation, task],
              {#metadata: metadata},
            ),
            returnValue:
                _i13.ifNotNull(
                  _i13.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #measure,
                      [operation, task],
                      {#metadata: metadata},
                    ),
                  ),
                  (T v) => _i10.Future<T>.value(v),
                ) ??
                _FakeFuture_13<T>(
                  this,
                  Invocation.method(
                    #measure,
                    [operation, task],
                    {#metadata: metadata},
                  ),
                ),
          )
          as _i10.Future<T>);
}
